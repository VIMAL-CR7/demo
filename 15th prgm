import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
%matplotlib inline
import numpy as np


(X_train, y_train), (X_test, y_test) = keras.datasets.mnist.load_data()


len(X_train)
len(X_test)


(X_train[0].shape)
plt.matshow(X_train[0])
plt.show()


print(y_train[0])


X_train = X_train / 255.0
X_test = X_test / 255.0


X_train_flattened = X_train.reshape(len(X_train), 28 * 28)
X_test_flattened = X_test.reshape(len(X_test), 28 * 28)


(X_train_flattened.shape)
model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(100, activation='relu'),
    keras.layers.Dense(10, activation='sigmoid')
])      

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

tb_callback = tf.keras.callbacks.TensorBoard(log_dir="logs/", histogram_freq=1)

model.fit(X_train, y_train, epochs=5, callbacks=[tb_callback])


%load_ext tensorboard

%tensorboard --logdir logs/
